server {
    listen 80;
    server_name hub-api.local;
    
    # Redirection vers HTTPS (à activer quand les certificats seront en place)
    # return 301 https://$host$request_uri;
    
    # Configuration pour le frontend
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Configuration pour l'API backend
    location /api {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Configuration HTTPS (à activer quand les certificats seront en place)
# server {
#     listen 443 ssl http2;
#     server_name hub-api.local;
#     
#     ssl_certificate /etc/nginx/certs/hub-api.crt;
#     ssl_certificate_key /etc/nginx/certs/hub-api.key;
#     
#     # Configuration pour le frontend
#     location / {
#         proxy_pass http://frontend:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
#     
#     # Configuration pour l'API backend
#     location /api {
#         proxy_pass http://backend:5000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# } 