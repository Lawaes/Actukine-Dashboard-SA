version: '3.8'

services:
  # Service pour le backend Node.js
  backend:
    build:
      context: ../backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: hub-api-backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - JWT_SECRET=hub_project_secret_key
      - DB_HOST=database
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=hub_db
    volumes:
      - ../backend:/app
      - /app/node_modules
    depends_on:
      - database
    networks:
      - hub-network

  # Service pour le frontend React/Next.js (à développer plus tard)
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    container_name: hub-api-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - hub-network

  # Service pour la base de données PostgreSQL
  database:
    image: postgres:13-alpine
    container_name: hub-api-database
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hub_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hub-network

  # Service pour l'administration de la base de données
  pgadmin:
    image: dpage/pgadmin4
    container_name: hub-api-pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - hub-network

  # Serveur web Nginx pour le reverse proxy
  nginx:
    image: nginx:alpine
    container_name: hub-api-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/sites-enabled
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - backend
      - frontend
    networks:
      - hub-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  hub-network:
    driver: bridge 